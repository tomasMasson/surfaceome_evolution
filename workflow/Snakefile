# SPECIES, = glob_wildcards("../results/{species}.fa.gz")
import pandas as pd
SPECIES = pd.read_csv("../resources/drosophila_urls.csv", names=["organism", "url"]).organism

rule all:
    input:
        expand("../results/{species}_filt.faa", species=SPECIES),
        directory("../results/orthofinder_run/")


rule download_genomes:
    input:  "../resources/drosophila_urls.csv"
    output: expand("../resources/genomes/{species}.fa.gz", species=SPECIES)
    shell:
        """
        scripts/download_ncbi_genomes.py --list {input} --folder ../resources/genomes/
        """


rule decompress_genomes:
    input:  "../resources/genomes/{species}.fa.gz"
    output: temp("../results/{species}.fa")
    shell:
        """
        gunzip -c {input} > {output}
        """


rule get_longest_isoform:
    input:  "../results/{species}.fa"
    output: "../results/{species}_filt.faa",
            "../results/{species}_filt.fna"
    shell:
        """
        ./scripts/get_longest_isoform.py -s {input} -o {wildcards.species} && \
        mv *filt.faa *filt.fna ../results/
        """


rule run_orthofinder:
    input: expand("../results/{species}_filt.faa", species=SPECIES)
    output: directory("../results/orthofinder_run/")
    params: "../results/orthofinder_run"
    shell:
        """
        mkdir {params} && \
        mv {input} {params} && \
        orthofinder -f {params}
        """
